#num8
write("bebra", "coords.txt")
#num8
write("bebra", "coords.txt")
x=read.table("E:/R_git/r_prac_1/coords.txt")
#num8
write("bebra", "coords.txt")
print(x)
#num8
read.table("R/coords.txt")
#num8
x=read.table("R/coords.txt")
#num8
x=read.table("R\coords.txt")
#num8
x=read.table("coords.txt")
print(x)
View(x)
View(x)
res=sum((abs(x))^4.43)^(1/4.43)
print(res)
#num9
#num9
x=readLines("coords.txt",7)
print(x)
print(prikol1)
prikol1 = diff(as.numeric(x))
prikol2 = diff(diff(as.numeric(x)))
print(prikol2)
print(prikol1)
write(prikol1, "diff_vectors.txt")
write(prikol2, "diff_vectors.txt", append = TRUE)
print(prikol1)
print(prikol2)
write(prikol1, "diff_vectors.txt")
#num9
x=readLines("coords.txt",7)
debugSource("E:/R_git/nubma_1/R/sript1.R")
#num9
x=readLines("coords.txt",7)
g=c(1, 0, 2, 3, 6, 8, 12, 15, 0, NA, NA, 9, 4, 16, 2, 0)
print(g[1])
print(g[length(g)])
print(g[3:5])
print(g[g==2])
print(g[g > 4])
print(g[g%%3==0 & g > 0])
print(g[g > 4 & g %% 3 == 0])
print(g[g > 5 | g < 1])
names(g)=1:16
print(names(g[g==0 & is.na(g) != TRUE]))
print(names(g[g>= 2 & g <= 8 & is.na(g) != TRUE]))
print(sort(g[g!=2], na.last = T))
#num8
x=read.table("coords.txt")
print(x)
res=sum((abs(x))^4.43)^(1/4.43)
print(res)
write(res, "result.txt")
#num9
x=readLines("coords.txt",7)
print(x)
prikol1 = diff(as.numeric(x))
prikol2 = diff(diff(as.numeric(x)))
print(prikol1)
print(prikol2)
write(prikol1, "diff_vectors.txt")
write(prikol2, "diff_vectors.txt", append = TRUE)
write(prikol1, "diff_vectors.txt",ncolumns = 100)
write(prikol2, "diff_vectors.txt", append = TRUE)
Matrica=cbind(vec1,vec2)
vec1=c(4, 0)
vec2=c(0, 9)
Matrica=cbind(vec1,vec2)
print(Matrica)
colnames("x1", "x2")
colnames(Matrica)=c("x1", "x2")
rownames(Matrica)=c("eq1", "eq2")
print(eigen(Matrica))
print(eigen(Matrica)[1]
print(eigen(Matrica)[1])
print(eigen(Matrica)[1])
B=diag(1,2) - Matrica
print(B)
f=c(4, 2)
u=c(0.2, -0.3)
solved=solve(Matrica, f)
print(solved)
u_result=solve(Matrica, f)
print(u_result)
u1=B%*%u + f
u2=B%*%u1 + f
u3=B%*%u2 + f
u4=B%*%u3 + f
u5=B%*%u4 + f
u6=B%*%u5 + f
u7=B%*%u6 + f
print(u7, u_result)
print(u_result)
print(u7)
Matrica_new=Matrica / max(Matrica)
Matrica_s_prikolom=Matrica / max(Matrica)
f_s_prikolom=f/max(f)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document", encoding = 'UTF-8')
# Задание сеточной поверхности
x <- seq(from = dekart_begin, to = dekart_end, by = step)
y <- x
step <- 1 # Шаг сетки
dekart_begin <- -5 # Начало сетки
dekart_end <- 5 # Конец сетки
# Задание сеточной поверхности
x <- seq(from = dekart_begin, to = dekart_end, by = step)
y <- x
# Задание двумерной функции на координатной сетке
surface_matrix <- outer(X = x,
Y = y,
FUN = function(x,y) Re(exp(-1i * 0.5 * x * y)))
dimnames(surface_matrix) <- list(x, y)
#View(surface_matrix)
write(paste("number of matrix elements:",nrow(surface_matrix)*ncol(surface_matrix)),"summary.txt")
write(paste("number of rows:",nrow(surface_matrix)),"summary.txt", append = T)
write(paste("number of cols:",ncol(surface_matrix)),"summary.txt", append = T)
write(paste("sum of main diag elements:",sum(diag(surface_matrix))),"summary.txt", append = T)
write(paste("sum of middle row elements:",sum(surface_matrix[,ncol(surface_matrix)/2+1])),"summary.txt", append = T)
write(paste("sum of middle column elements:",sum(surface_matrix[nrow(surface_matrix)/2+1,])),"summary.txt", append = T)
write(paste("row sums:",toString(as.vector(rowSums(surface_matrix)))),"summary.txt", append = T)
write(paste("col sums:",toString(as.vector(colSums(surface_matrix)))),"summary.txt", append = T)
dekart_begin=as.numeric(readline())
step <- as.numeric(readline())
x=seq(from = dekart_begin, to = dekart_end, by = step)
dekart_begin=as.numeric(readline())
step <- as.numeric(readline())
x=seq(from = dekart_begin, to = dekart_end, by = step)
source("~/.active-rstudio-document", encoding = 'UTF-8')
source("~/.active-rstudio-document", encoding = 'UTF-8')
source("~/.active-rstudio-document", encoding = 'UTF-8')
1
source("~/.active-rstudio-document", encoding = 'UTF-8')
